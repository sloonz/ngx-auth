#!/usr/bin/env node

import process from "node:process";
import {importJWK, SignJWT} from "jose";

if(process.argv.includes("-h") || process.argv.includes("--help") || process.argv.length <= 2) {
	console.log(`Usage ${process.argv[0]} ${process.argv[1]} private-key origin [claim1:value1 [claim2:value2 ...]]`);
	console.log("valid claims are path and standard JWT claims like exp");
	console.log("example: ./make-bypass-token $(vault kv get --field=bypass_private_key secret/infra/ngx-auth) http://localhost iat:$(date +%s)");
	process.exit(1);
}

async function main() {
	const [privKey, origin, ...extraClaims] = process.argv.slice(2);
	const key = await importJWK(JSON.parse(Buffer.from(privKey, "base64url").toString()));
	const claims = { origin };
	for(const extraClaim of extraClaims) {
		const [, claim, value] = extraClaim.match(/([^:]+):(.+)/);
		claims[claim] = value;
	}

	if(!claims.path) {
		claims.path = "/";
	}

	console.log(await new SignJWT(claims).setProtectedHeader({ alg: "EdDSA" }).setIssuedAt().sign(key));
}

main().catch(err => {
	console.error(err);
	process.exit(1);
});
